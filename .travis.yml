sudo: required

services:
  - docker

language: java

jdk: oraclejdk8

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

before_script:
  - chmod +x gradlew
script:
  - ./gradlew check
  - ./gradlew codeCoverageReport

after_success:
  - bash <(curl -s https://codecov.io/bash)

  - docker --version
  - pip install --user awscli
  - export PATH=$PATH:$HOME/.local/bin
  - eval $(aws ecr get-login --region $AWS_REGION)

  # TAG
  - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH; fi`

  # CONFIG SERVICE
  - export CONFIG=swordfish/config-service
  - docker build -t $CONFIG ./config-service
  - docker tag $CONFIG:$TAG $AWS_ECS_BASE/$CONFIG:$TAG
  - docker push $AWS_ECS_BASE/$CONFIG:$TAG

  # EDGE SERVICE
  - export CONFIG=swordfish/edge-service
  - docker build -t $CONFIG ./edge-service
  - docker tag $CONFIG:$TAG $AWS_ECS_BASE/$CONFIG:$TAG
  - docker push $AWS_ECS_BASE/$CONFIG:$TAG

  # EUREKA SERVICE
  - export CONFIG=swordfish/eureka-service
  - docker build -t $CONFIG ./eureka-service
  - docker tag $CONFIG:$TAG $AWS_ECS_BASE/$CONFIG:$TAG
  - docker push $AWS_ECS_BASE/$CONFIG:$TAG

  # INSTANCE SERVICE
  - export CONFIG=swordfish/instance-service
  - docker build -t $CONFIG ./instance-service
  - docker tag $CONFIG:$TAG $AWS_ECS_BASE/$CONFIG:$TAG
  - docker push $AWS_ECS_BASE/$CONFIG:$TAG

  # NODE SERVICE
  - export CONFIG=swordfish/node-service
  - docker build -t $CONFIG ./node-service
  - docker tag $CONFIG:$TAG $AWS_ECS_BASE/$CONFIG:$TAG
  - docker push $AWS_ECS_BASE/$CONFIG:$TAG

  # NOTIFICATION SERVICE
  - export CONFIG=swordfish/notification-service
  - docker build -t $CONFIG ./notification-service
  - docker tag $CONFIG:$TAG $AWS_ECS_BASE/$CONFIG:$TAG
  - docker push $AWS_ECS_BASE/$CONFIG:$TAG

  # RESTORE SERVICE
  - export CONFIG=swordfish/restore-service
  - docker build -t $CONFIG ./restore-service
  - docker tag $CONFIG:$TAG $AWS_ECS_BASE/$CONFIG:$TAG
  - docker push $AWS_ECS_BASE/$CONFIG:$TAG